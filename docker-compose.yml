version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.venv
    depends_on:
      - redis
    command: python -c "
import time
import subprocess
import sys
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

class RestartHandler(FileSystemEventHandler):
    def __init__(self):
        self.process = None
        self.restart_app()
    
    def restart_app(self):
        if self.process:
            self.process.terminate()
            self.process.wait()
        print('Starting Flask app...')
        self.process = subprocess.Popen([sys.executable, 'app.py'])
    
    def on_modified(self, event):
        if event.is_directory:
            return
        if event.src_path.endswith('.py') or event.src_path.endswith('.html'):
            print(f'File changed: {event.src_path}')
            self.restart_app()

if __name__ == '__main__':
    handler = RestartHandler()
    observer = Observer()
    observer.schedule(handler, path='.', recursive=True)
    observer.start()
    
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
        if handler.process:
            handler.process.terminate()
    observer.join()
"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  redis_data: 