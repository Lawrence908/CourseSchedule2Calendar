# name: Deploy to Google Cloud

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# env:
#   PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
#   REGION: us-central1
#   SERVICE_NAME: schedshare

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
    
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.11'
    
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         pip install pytest pytest-cov
    
#     - name: Run tests
#       run: |
#         python -m pytest --cov=app --cov-report=xml
    
#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v3
#       with:
#         file: ./coverage.xml

#   build-and-deploy:
#     needs: test
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'
    
#     steps:
#     - uses: actions/checkout@v4
    
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v3
    
#     - name: Authenticate to Google Cloud
#       uses: google-github-actions/auth@v2
#       with:
#         credentials_json: ${{ secrets.GCP_SA_KEY }}
    
#     - name: Configure Docker for GCR
#       run: gcloud auth configure-docker
    
#     - name: Build and push Docker image
#       run: |
#         docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
#         docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}
#         docker tag gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
#         docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
    
#     - name: Deploy to Cloud Run
#       uses: google-github-actions/deploy-cloudrun@v1
#       with:
#         service: ${{ env.SERVICE_NAME }}
#         image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
#         region: ${{ env.REGION }}
#         env_vars: |
#           FLASK_ENV=production
#           REDIS_URL=${{ secrets.REDIS_URL }}
#         secrets: |
#           FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}
#           MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
#           MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
#           GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
#           GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
#           APPLE_CLIENT_ID=${{ secrets.APPLE_CLIENT_ID }}
#           APPLE_TEAM_ID=${{ secrets.APPLE_TEAM_ID }}
#           APPLE_KEY_ID=${{ secrets.APPLE_KEY_ID }}
    
#     - name: Show service URL
#       run: |
#         gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)' 